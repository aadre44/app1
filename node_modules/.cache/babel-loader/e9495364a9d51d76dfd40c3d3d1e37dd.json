{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\aa-dr\\\\Desktop\\\\app1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { get } from \"https\";\n\nfunction getTokenPrices() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coin = _useState2[0],\n      setCoin = _useState2[1];\n\n  useEffect(function () {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=USD&order=market_cap_desc&per_page=100&page=3&sparkline=true').then(function (res) {\n      setCoin(res.data);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }, []);\n}\n\nexport default getTokenPrices;","map":{"version":3,"sources":["C:/Users/aa-dr/Desktop/app1/src/Components/helper.js"],"names":["React","Component","useState","useEffect","axios","get","getTokenPrices","coin","setCoin","then","res","data","catch","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,OAApB;;AAEA,SAASC,cAAT,GAAyB;AAAA,kBAEGJ,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,MAEdK,IAFc;AAAA,MAERC,OAFQ;;AAGrBL,EAAAA,SAAS,CAAE,YAAK;AACZC,IAAAA,KAAK,CAACC,GAAN,CAAU,yHAAV,EAAsII,IAAtI,CAA2I,UAAAC,GAAG,EAAG;AAC7IF,MAAAA,OAAO,CAACE,GAAG,CAACC,IAAL,CAAP;AAEH,KAHD,EAGGC,KAHH,CAGS,UAAAC,KAAK;AAAA,aAAGC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAH;AAAA,KAHd;AAIH,GALQ,EAKN,EALM,CAAT;AAOH;;AAED,eAAeP,cAAf","sourcesContent":["import React, {Component, useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport { get } from \"https\";\r\n\r\nfunction getTokenPrices(){\r\n\r\n    const [coin, setCoin] = useState([]);\r\n    useEffect( () =>{\r\n        axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=USD&order=market_cap_desc&per_page=100&page=3&sparkline=true'). then(res =>{\r\n            setCoin(res.data);\r\n            \r\n        }).catch(error=> console.log(error))\r\n    }, []);\r\n\r\n}\r\n\r\nexport default getTokenPrices"]},"metadata":{},"sourceType":"module"}