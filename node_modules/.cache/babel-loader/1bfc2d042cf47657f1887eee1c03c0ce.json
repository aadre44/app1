{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\aa-dr\\\\Music\\\\hacks\\\\app1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\aa-dr\\\\Music\\\\hacks\\\\app1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\aa-dr\\\\Music\\\\hacks\\\\app1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\aa-dr\\\\Music\\\\hacks\\\\app1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\aa-dr\\\\Music\\\\hacks\\\\app1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\aa-dr\\\\Music\\\\hacks\\\\app1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\aa-dr\\\\Music\\\\hacks\\\\app1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\aa-dr\\\\Music\\\\hacks\\\\app1\\\\src\\\\App.js\";\nimport { render } from 'react-dom';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Web3 from 'web3';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"loadBlockchainData\",\n\n    /*\r\n    async UNSAFE_componentWillMount(){\r\n        await this.loadWeb3()\r\n        await this.loadBlockchainData()\r\n    }\r\n    */\n\n    /*\r\n    async connectWallet(){\r\n        await this.loadWeb3();\r\n      await this.loadBlockchainData();\r\n    }*/\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var web3, account, balance;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                web3 = window.web3; // This gets a list of the accounts for this wallet\n\n                _context.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context.sent;\n                balance = web3.eth.getBalance(account).then(console.log);\n                console.log(\"Account: \" + account);\n                this.state.account = account;\n                this.render();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(\"loading web3\");\n\n                if (!window.ethereum) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 5;\n                return window.ethereum.enable();\n\n              case 5:\n                _context2.next = 8;\n                break;\n\n              case 7:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('no ethereum browser detected');\n                }\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x34634'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, \"Address: \", this.state.account, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.connectWallet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, \" Connect Wallet`\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n/*\r\nconst provider = await detectEthereumProvider();\r\n\r\nif( provider){\r\n    startApp(provider);\r\n} else {\r\n    console.log('Please install Metamask!');\r\n}\r\n\r\nif(!window.ethereum){\r\n\r\n    return false;\r\n}\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/aa-dr/Music/hacks/app1/src/App.js"],"names":["render","React","Component","Web3","App","web3","window","eth","getAccounts","account","balance","getBalance","then","console","log","state","ethereum","enable","currentProvider","alert","props","connectWallet"],"mappings":";;;;;;;;AACA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IAIMC,G;;;;;;AAEF;;;;;;;AAKE;;;;;;;;;;;;AAWQC,gBAAAA,I,GAAOC,MAAM,CAACD,I,EACpB;;;uBACsBA,IAAI,CAACE,GAAL,CAASC,WAAT,E;;;AAAhBC,gBAAAA,O;AACAC,gBAAAA,O,GAAUL,IAAI,CAACE,GAAL,CAASI,UAAT,CAAoBF,OAApB,EAA6BG,IAA7B,CAAkCC,OAAO,CAACC,GAA1C,C;AAChBD,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAYL,OAAxB;AACA,qBAAKM,KAAL,CAAWN,OAAX,GAAqBA,OAArB;AACA,qBAAKT,MAAL;;;;;;;;;;;;;;;;;;;;;;;;AAGAa,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;qBACGR,MAAM,CAACU,Q;;;;;AACNV,gBAAAA,MAAM,CAACD,IAAP,GAAc,IAAIF,IAAJ,CAASG,MAAM,CAACU,QAAhB,CAAd;;uBACMV,MAAM,CAACU,QAAP,CAAgBC,MAAhB,E;;;;;;;AACJ,oBAAGX,MAAM,CAACD,IAAV,EAAgB;AAElBC,kBAAAA,MAAM,CAACD,IAAP,GAAc,IAAIF,IAAJ,CAASG,MAAM,CAACD,IAAP,CAAYa,eAArB,CAAd;AAEH,iBAJK,MAIA;AAEFZ,kBAAAA,MAAM,CAACa,KAAP,CAAa,8BAAb;AACH;;;;;;;;;;;;;;;;;;AAIL,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,6EAAMA,KAAN;AACA,UAAKL,KAAL,GAAa;AACTN,MAAAA,OAAO,EAAC;AADC,KAAb;AAFc;AAKjB;;;;6BAGO;AAEJ,0BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAc,KAAKM,KAAL,CAAWN,OAAzB,MAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKY,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,CAFJ;AAQH;;;;EA5DanB,S;;AA+DlB,eAAeE,GAAf;AACA","sourcesContent":["\r\nimport { render } from 'react-dom';\r\nimport React, {Component} from 'react'\r\nimport './App.css'\r\nimport Web3 from 'web3'\r\n\r\n\r\n\r\nclass App extends Component{\r\n    \r\n    /*\r\n    async UNSAFE_componentWillMount(){\r\n        await this.loadWeb3()\r\n        await this.loadBlockchainData()\r\n    }\r\n    *//*\r\n   async connectWallet(){\r\n\r\n        await this.loadWeb3();\r\n        await this.loadBlockchainData();\r\n\r\n   }*/\r\n\r\n\r\n    async loadBlockchainData(){\r\n\r\n        const web3 = window.web3\r\n        // This gets a list of the accounts for this wallet\r\n        const account = await web3.eth.getAccounts();\r\n        const balance = web3.eth.getBalance(account).then(console.log);\r\n        console.log(\"Account: \"+account);\r\n        this.state.account = account;\r\n        this.render();\r\n    }\r\n    async loadWeb3(){\r\n        console.log(\"loading web3\");\r\n        if(window.ethereum){\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n        }else if(window.web3 ){\r\n\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n\r\n        }else {\r\n\r\n            window.alert('no ethereum browser detected')\r\n        }\r\n\r\n    } \r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            account:'0x34634'\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <div>\r\n                \r\n                <h1>Address: {this.state.account} </h1>\r\n                <button onClick={this.connectWallet}> Connect Wallet`</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default App\r\n/*\r\nconst provider = await detectEthereumProvider();\r\n\r\nif( provider){\r\n    startApp(provider);\r\n} else {\r\n    console.log('Please install Metamask!');\r\n}\r\n\r\nif(!window.ethereum){\r\n\r\n    return false;\r\n}\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}