{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\aa-dr\\\\Desktop\\\\app1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aa-dr\\\\Desktop\\\\app1\\\\src\\\\PieChart.js\";\nimport React, { useState } from \"react\";\nimport { Pie } from \"@visx/shape\";\nimport { Group } from \"@visx/group\";\nimport { Text } from \"@visx/text\";\nvar coins = [{\n  symbol: \"ADA\",\n  amount: 200,\n  color: \"#0033ad\",\n  inUSD: 1.48\n}, {\n  symbol: \"SOL\",\n  amount: 5,\n  color: \"#00ffbd\",\n  inUSD: 37.6\n}, {\n  symbol: \"BTC\",\n  amount: 0.005,\n  color: \"#F7931A\",\n  inUSD: 37363\n}];\n\nfunction PieChart() {\n  var _this = this;\n\n  /*\r\n      const width = 400;\r\n      return(\r\n          <div>\r\n  \r\n              <svg width={width} height={width}> \r\n  \r\n                  <group top={half} left={half}></group>\r\n              \r\n              </svg>\r\n  \r\n          </div>\r\n      )\r\n  */\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  var width = 400;\n  var half = width / 2;\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Group, {\n    top: half,\n    left: half,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: coins,\n    pieValue: function pieValue(data) {\n      return data.amount * data.inUSD;\n    },\n    outerRadius: half,\n    innerRadius: function innerRadius(_ref) {\n      var data = _ref.data;\n      var size = active && active.symbol == data.symbol ? 12 : 8;\n      return half - size;\n    },\n    padAngle: 0.01,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, function (pie) {\n    return pie.arcs.map(function (arc) {\n      return /*#__PURE__*/React.createElement(\"g\", {\n        key: arc.data.symbol,\n        onMouseEnter: function onMouseEnter() {\n          return setActive(arc.data);\n        },\n        onMouseLeave: function onMouseLeave() {\n          return setActive(null);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: pie.path(arc),\n        fill: arc.data.color,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }));\n    });\n  }), active ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n    textAnchor: \"middle\",\n    fill: \"#fff\",\n    fontSize: 40,\n    dy: -20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"$\".concat(Math.floor(active.amount * active.inUSD))), /*#__PURE__*/React.createElement(Text, {\n    textAnchor: \"middle\",\n    fill: active.color,\n    fontSize: 20,\n    dy: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"\".concat(active.amount, \" \").concat(active.symbol))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n    textAnchor: \"middle\",\n    fill: \"#fff\",\n    fontSize: 40,\n    dy: -20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"$\".concat(Math.floor(coins.reduce(function (acc, coin) {\n    return acc + coin.amount * coin.inUSD;\n  }, 0)))), /*#__PURE__*/React.createElement(Text, {\n    textAnchor: \"middle\",\n    fill: \"#aaa\",\n    fontSize: 20,\n    dy: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"\".concat(coins.length, \" Assets\"))))));\n}\n\nexport default PieChart;","map":{"version":3,"sources":["C:/Users/aa-dr/Desktop/app1/src/PieChart.js"],"names":["React","useState","Pie","Group","Text","coins","symbol","amount","color","inUSD","PieChart","active","setActive","width","half","data","size","pie","arcs","map","arc","path","Math","floor","reduce","acc","coin","length"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Pie} from \"@visx/shape\";\r\nimport {Group} from \"@visx/group\"\r\nimport {Text } from \"@visx/text\"\r\n\r\nconst coins = [\r\n    { symbol: \"ADA\", amount: 200, color: \"#0033ad\", inUSD: 1.48 },\r\n    { symbol: \"SOL\", amount: 5, color: \"#00ffbd\", inUSD: 37.6 },\r\n    { symbol: \"BTC\", amount: 0.005, color: \"#F7931A\", inUSD: 37363 },\r\n  ];\r\n\r\nfunction PieChart(){\r\n/*\r\n    const width = 400;\r\n    return(\r\n        <div>\r\n\r\n            <svg width={width} height={width}> \r\n\r\n                <group top={half} left={half}></group>\r\n            \r\n            </svg>\r\n\r\n        </div>\r\n    )\r\n*/\r\n    const [active, setActive] = useState(null);\r\n  const width = 400;\r\n  const half = width / 2;\r\n\r\n  return (\r\n    <main>\r\n      <svg width={width} height={width}>\r\n        <Group top={half} left={half}>\r\n          <Pie\r\n            data={coins}\r\n            pieValue={(data) => data.amount * data.inUSD}\r\n            outerRadius={half}\r\n            innerRadius={({ data }) => {\r\n              const size = active && active.symbol == data.symbol ? 12 : 8;\r\n              return half - size;\r\n            }}\r\n            padAngle={0.01}\r\n          >\r\n            {(pie) => {\r\n              return pie.arcs.map((arc) => {\r\n                return (\r\n                  <g\r\n                    key={arc.data.symbol}\r\n                    onMouseEnter={() => setActive(arc.data)}\r\n                    onMouseLeave={() => setActive(null)}\r\n                  >\r\n                    <path d={pie.path(arc)} fill={arc.data.color}></path>\r\n                  </g>\r\n                );\r\n              });\r\n            }}\r\n          </Pie>\r\n\r\n          {active ? (\r\n            <>\r\n              <Text textAnchor=\"middle\" fill=\"#fff\" fontSize={40} dy={-20}>\r\n                {`$${Math.floor(active.amount * active.inUSD)}`}\r\n              </Text>\r\n\r\n              <Text\r\n                textAnchor=\"middle\"\r\n                fill={active.color}\r\n                fontSize={20}\r\n                dy={20}\r\n              >\r\n                {`${active.amount} ${active.symbol}`}\r\n              </Text>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Text textAnchor=\"middle\" fill=\"#fff\" fontSize={40} dy={-20}>\r\n                {`$${Math.floor(\r\n                  coins.reduce((acc, coin) => acc + coin.amount * coin.inUSD, 0)\r\n                )}`}\r\n              </Text>\r\n\r\n              <Text textAnchor=\"middle\" fill=\"#aaa\" fontSize={20} dy={20}>\r\n                {`${coins.length} Assets`}\r\n              </Text>\r\n            </>\r\n          )}\r\n        </Group>\r\n      </svg>\r\n    </main>\r\n  );\r\n}\r\n\r\n\r\nexport default PieChart"]},"metadata":{},"sourceType":"module"}