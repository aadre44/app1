{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\aa-dr\\\\Desktop\\\\app1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aa-dr\\\\Desktop\\\\app1\\\\src\\\\Helper\\\\AccountSetup.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; //Use this to obtain all the coins' id in order to make API calls\n//https://api.coingecko.com/api/v3/coins/list?include_platform=true\n// Search info for Coin using Contract address\n//https://api.coingecko.com/api/v3/coins/ethereum/contract/0x990f341946a3fdb507ae7e52d17851b87168017c/market_chart/?vs_currency=usd&days=1\n//https://api.coingecko.com/api/v3/coins/ethereum/contract/0x990f341946a3fdb507ae7e52d17851b87168017c\n\nfunction setUp() {}\n\nfunction loadWallet() {}\n\nfunction getMyTokenData(myTokens) {\n  var allTokenData = [];\n  var count = 0;\n\n  var _loop = function _loop(token) {\n    if (count >= 50) return \"break\";\n    count++;\n    useEffect(function () {\n      axios.get('//https://api.coingecko.com/api/v3/coins/ethereum/contract/' + token[0]).then(function (res) {\n        allTokenData.push(res.data);\n      }).catch(function (error) {\n        return console.log(error + \"Error fetching data for the getMyTokenData funciton\");\n      });\n    }, []);\n  };\n\n  for (var token in myTokens) {\n    var _ret = _loop(token);\n\n    if (_ret === \"break\") break;\n  }\n\n  console.log(allTokenData);\n  return allTokenData;\n}\n\nfunction TokenSearch() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coins = _useState2[0],\n      setCoins = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  useEffect(function () {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=USD&order=market_cap_desc&per_page=100&page=3&sparkline=true').then(function (res) {\n      setCoins(res.data);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }, []);\n  var filteredCoins = coins.filter(function (coin) {\n    return coin.name.toLowerCase().includes(search.toLowerCase()) || coin.symbol.toLowerCase().includes(search.toLowerCase());\n  });\n\n  var handleChange = function handleChange(e) {\n    setSearch(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"coin-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"coin-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Search a currency\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"coin-input\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }))), filteredCoins.map(function (coin) {\n    return /*#__PURE__*/React.createElement(CoinCard, {\n      key: coin.id,\n      name: coin.name,\n      price: coin.current_price,\n      symbol: coin.symbol,\n      marketcap: coin.total_volume,\n      volume: coin.market_cap,\n      image: coin.image,\n      priceChange: coin.price_change_percentage_24h,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    });\n  }));\n}\n\nexport default {\n  getMyTokenData: getMyTokenData\n};","map":{"version":3,"sources":["C:/Users/aa-dr/Desktop/app1/src/Helper/AccountSetup.js"],"names":["React","useState","useEffect","axios","setUp","loadWallet","getMyTokenData","myTokens","allTokenData","count","token","get","then","res","push","data","catch","error","console","log","TokenSearch","coins","setCoins","search","setSearch","filteredCoins","filter","coin","name","toLowerCase","includes","symbol","handleChange","e","target","value","map","id","current_price","total_volume","market_cap","image","price_change_percentage_24h"],"mappings":"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","sourcesContent":["import  React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n//Use this to obtain all the coins' id in order to make API calls\r\n//https://api.coingecko.com/api/v3/coins/list?include_platform=true\r\n// Search info for Coin using Contract address\r\n//https://api.coingecko.com/api/v3/coins/ethereum/contract/0x990f341946a3fdb507ae7e52d17851b87168017c/market_chart/?vs_currency=usd&days=1\r\n//https://api.coingecko.com/api/v3/coins/ethereum/contract/0x990f341946a3fdb507ae7e52d17851b87168017c\r\n\r\n\r\nfunction setUp(){\r\n\r\n}\r\n\r\nfunction loadWallet(){\r\n\r\n\r\n\r\n}\r\nfunction getMyTokenData(myTokens){\r\n\r\n    const allTokenData = []\r\n    var count = 0;\r\n    for( let token in myTokens){\r\n        if(count >= 50) break;\r\n        count++;\r\n        useEffect( () =>{\r\n            axios.get('//https://api.coingecko.com/api/v3/coins/ethereum/contract/'+token[0]). then(res =>{\r\n                allTokenData.push(res.data);\r\n                    \r\n            }).catch(error=> console.log(error+\"Error fetching data for the getMyTokenData funciton\"))\r\n        }, []);\r\n    }\r\n\r\n    console.log(allTokenData);\r\n    return allTokenData;\r\n    \r\n}\r\n\r\n\r\nfunction TokenSearch(){\r\n\r\n    const [coins, setCoins] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n\r\n    useEffect( () =>{\r\n        axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=USD&order=market_cap_desc&per_page=100&page=3&sparkline=true'). then(res =>{\r\n            setCoins(res.data);\r\n            \r\n        }).catch(error=> console.log(error))\r\n    }, []);\r\n\r\n    const filteredCoins= coins.filter(coin => {\r\n        \r\n        return coin.name.toLowerCase().includes(search.toLowerCase()) || coin.symbol.toLowerCase().includes(search.toLowerCase())\r\n    \r\n    });\r\n    const handleChange= e => {\r\n        setSearch(e.target.value);\r\n    };\r\n\r\n    return(\r\n\r\n        <div className=\"App3\">\r\n                <div className='coin-search'>\r\n                    <h1 className='coin-text'>Search a currency</h1>\r\n                    <form>\r\n                    <input\r\n                        className='coin-input'\r\n                        type='text'\r\n                        onChange={handleChange}\r\n                        placeholder='Search'/>\r\n                    </form>\r\n                </div>\r\n                {filteredCoins.map(coin =>{\r\n                    return (\r\n                        <CoinCard\r\n                            key={coin.id}\r\n                            name={coin.name}\r\n                            price={coin.current_price}\r\n                            symbol={coin.symbol}\r\n                            marketcap={coin.total_volume}\r\n                            volume={coin.market_cap}\r\n                            image={coin.image}\r\n                            priceChange={coin.price_change_percentage_24h}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default {getMyTokenData}"]},"metadata":{},"sourceType":"module"}