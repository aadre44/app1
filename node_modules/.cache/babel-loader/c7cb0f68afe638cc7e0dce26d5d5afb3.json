{"ast":null,"code":"var _excluded = [\"data\", \"className\", \"top\", \"left\", \"x0\", \"x0Scale\", \"x1Scale\", \"yScale\", \"color\", \"keys\", \"height\", \"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport cx from 'classnames';\nimport { Group } from '@visx/group';\nimport Bar from './Bar';\nimport getBandwidth from '../util/getBandwidth';\n/**\r\n * Generates bar groups as an array of objects and renders `<rect />`s for each datum grouped by `key`. A general setup might look like this:\r\n *\r\n * ```js\r\n * const data = [{\r\n *  date: date1,\r\n *  key1: value,\r\n *  key2: value,\r\n *  key3: value\r\n * }, {\r\n *  date: date2,\r\n *  key1: value,\r\n *  key2: value,\r\n *  key3: value,\r\n * }];\r\n *\r\n * const x0 = d => d.date;\r\n * const keys = [key1, key2, key3];\r\n *\r\n * const x0Scale = scaleBand({\r\n *  domain: data.map(x0),\r\n *  padding: 0.2\r\n * });\r\n * const x1Scale = scaleBand({\r\n *  domain: keys,\r\n *  padding: 0.1\r\n * });\r\n * const yScale = scaleLinear({\r\n *   domain: [0, Math.max(...data.map(d => Math.max(...keys.map(key => d[key]))))]\r\n * });\r\n * const color = scaleOrdinal({\r\n *   domain: keys,\r\n *   range: [blue, green, purple]\r\n * });\r\n * ```\r\n *\r\n * Example: [https://airbnb.io/visx/bargroup](https://airbnb.io/visx/bargroup)\r\n */\n\nexport default function BarGroup(_ref) {\n  var data = _ref.data,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      x0 = _ref.x0,\n      x0Scale = _ref.x0Scale,\n      x1Scale = _ref.x1Scale,\n      yScale = _ref.yScale,\n      color = _ref.color,\n      keys = _ref.keys,\n      height = _ref.height,\n      children = _ref.children,\n      restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var barWidth = getBandwidth(x1Scale);\n  var barGroups = data.map(function (group, i) {\n    return {\n      index: i,\n      x0: x0Scale(x0(group)),\n      bars: keys.map(function (key, j) {\n        var value = group[key];\n        return {\n          index: j,\n          key: key,\n          value: value,\n          width: barWidth,\n          x: x1Scale(key) || 0,\n          y: yScale(value) || 0,\n          color: color(key, j),\n          height: height - (yScale(value) || 0)\n        };\n      })\n    };\n  });\n  if (children) return /*#__PURE__*/React.createElement(React.Fragment, null, children(barGroups));\n  return /*#__PURE__*/React.createElement(Group, {\n    className: cx('visx-bar-group', className),\n    top: top,\n    left: left\n  }, barGroups.map(function (barGroup) {\n    return /*#__PURE__*/React.createElement(Group, {\n      key: \"bar-group-\" + barGroup.index + \"-\" + barGroup.x0,\n      left: barGroup.x0\n    }, barGroup.bars.map(function (bar) {\n      return /*#__PURE__*/React.createElement(Bar, _extends({\n        key: \"bar-group-bar-\" + barGroup.index + \"-\" + bar.index + \"-\" + bar.value + \"-\" + bar.key,\n        x: bar.x,\n        y: bar.y,\n        width: bar.width,\n        height: bar.height,\n        fill: bar.color\n      }, restProps));\n    }));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}